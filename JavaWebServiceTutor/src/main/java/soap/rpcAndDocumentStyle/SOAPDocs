SOAP stands for Simple Object Access Protocol. It is a XML-based protocol for accessing web services.
SOAP is a W3C recommendation for communication between two applications.
SOAP is XML based protocol. It is platform independent and language independent. 
By using SOAP, you will be able to interact with other programming language applications.

Advantages of Soap Web Services
WS Security: SOAP defines its own security known as WS Security.
Language and Platform independent: SOAP web services can be written in any programming language and executed in any platform.

Disadvantages of Soap Web Services
Slow: SOAP uses XML format that must be parsed to be read. It defines many standards that must be followed while developing the SOAP applications.
	  So it is slow and consumes more bandwidth and resource.
WSDL dependent: SOAP uses WSDL and doesn't have any other mechanism to discover the service.

JAX-WS is the java API for SOAP web services.
There are two ways to develop JAX-WS example.
1.RPC style
2.Document style

Document vs RPC style:

RPC and Document are two different ways to encode and construct SOAP messages.
RPC style SOAP messages contain an XML representation of the method’s call in their body,
	and use the name of the method and its parameters to construct an XML tree that represents the method’s call stack.
Document style, the SOAP body contains an XML document that can be validated against a defined XML schema. 
	This is a more customizable and flexible approach as the protocol relies on the pre-defined schema to determine the structure of the SOAP message which can be done on the fly.
	And it means that you are free to customize the SOAP messages as much as you want.

The basic architecture of a JAX-WS Web Service consists of two main parts:

1.Web Service Endpoint: 
It is a connection point where pages and Web Services are exposed to consumers and clients.
In order to create a Web Service Endpoint:
	First you have to create a Web Service Endpoint Interface.This interface will contain the declarations of all the methods you want to include in the Web Service.
	Then you have to create a class that actually implements the above interface, which will be your Endpoint implementation.
	Finally you create your Endpoint publisher which actually deploys the web service and creates and publishes the endpoint for the specified implementor object at a given address. 
		The necessary server infrastructure will be created and configured by the JAX-WS implementation. You have to run the publisher to make your Web Service available to clients.
		WSDL generated by running the publisher can be seen by visiting the URL mentioned in the publisher.
2.Web Service Client: 
The program that makes use of the published Web Service from the above Endpoint.
This is client that consumes the above Web Service.

